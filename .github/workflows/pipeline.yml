
name: AClimate Frontend CI/CD

on:
  push:
    branches: [ "stage" ]
    tags:
    - 'v*'
  workflow_dispatch:


permissions:
  contents: write

jobs:

# ------- START FRONT PROCCESS -------- #
  
    
  ci:
    name: Lint and Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./src/package-lock.json
      - name: Install dependencies
        run: npm ci --prefix ./src
      - name: Lint
        run: npm --prefix ./src run lint
      - name: Build
        run: npm --prefix ./src run build

# ------- END FRONT PROCCESS -------- #

# ------- START MERGE PROCCESS -------- #

  merge-stage-to-main:
    needs: [ci]
    name: Merge stage into main
    runs-on: ubuntu-latest
    # Only attempt the merge when the workflow was triggered by pushes to the stage branch
    if: github.ref == 'refs/heads/stage'
    permissions:
      contents: write
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Merge stage -> main
        # This will fail if there are merge conflicts or if main is protected against direct pushes.
        # If main has branch protection requiring PRs, switch to a PR-based merge approach instead.
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch origin main stage
          git checkout main
          git merge --no-ff --no-edit origin/stage
          git push origin main

# ------- END MERGE PROCCESS -------- #

# ------- START RELEASE PROCCESS -------- #

  release:
    needs: merge-stage-to-main
    name: Create Release
    runs-on: ubuntu-latest
    # Only run a release after a successful merge from stage
    if: github.ref == 'refs/heads/stage'
    permissions:
      contents: write
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./src/package-lock.json
      - name: Install dependencies
        run: npm ci --prefix ./src
      - name: Build
        run: npm --prefix ./src run build
      - name: Zip Next.js build artifact
        run: |
          zip -r releaseFront.zip ./src/.next
      - name: Create and push tag
        id: tagger
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: main
          BRANCH_HISTORY: last
          INITIAL_VERSION: 3.0.0
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tagger.outputs.new_tag }}
          name: Release ${{ steps.tagger.outputs.new_tag }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
          files: |
            releaseFront.zip

# ------- END RELEASE PROCCESS -------- #
      
